# Open-API-and-SDKs

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.97.2"

platform :ios do
	
	desc "Deploys a new release of AirServiceKit to current branch"
	desc "Version will be taken from the the AirServiceKit.framework version unless specified"
	desc "Optionally, provide a version using version_number:1.2.3"
	lane :deploy do |options|
		deploy_version = valid_deployment_version_number options
		version_bump_podspec(
			path: "AirServiceKit.podspec",
			version_number: deploy_version
		)
		version_bump_podspec(
			path: "ASPayPalPayments.podspec",
			version_number: deploy_version
		)

		pod_lib_lint allow_warnings: true
		documentation
		git_commit(
			path: ['AirServiceKit.podspec', 'ASPayPalPayments.podspec', 'iOS/Docs'],
			message: "Release AirServiceKit #{deploy_version}"
		)
		add_git_tag tag: "ios-sdk.#{new_version}"
		# push_to_git_remote
	end

	desc "Generates the latest AirServiceKit documentation at iOS/Docs"
	lane :documentation do
		config = File.join("iOS", ".jazzy.yaml")
		jazzy config: config
	end

	private_lane :valid_deployment_version_number do |options|
		deploy_version = framework_version
		if options[:version_number] 
			raise "version_number must take the format 1.2.3" unless options[:version_number] =~ /\d.\d.\d/
			if !is_version_equal(deploy_version, options[:version_number])				
					UI.user_error! "Aborted" unless prompt(text: "Supplied version is different to AirServiceKit.framework version (#{deploy_version}). Continue?".yellow, boolean: true)
					deploy_version = options[:version_number]
			end
		end

		current_podspec_version = version_get_podspec path: "AirServiceKit.podspec"
		raise "Version (#{deploy_version}) must be newer than current podspec version (#{current_podspec_version})" unless is_version_greater(current_podspec_version, deploy_version)

		UI.message "The validated deployment version number is #{deploy_version}".blue
		deploy_version
	end

	private_lane :framework_version do
		path = File.join("..", "iOS", "AirServiceKit.framework", "Info.plist")
    UI.user_error!("Could not find file at path '#{path}'") unless File.exist?(path)
    
    Dir.mktmpdir { |dir|
    	FileUtils.cp(path, dir)
    	plist = File.join(dir, "Info.plist")
    	sh "plutil -convert xml1 #{plist}"

			version = get_info_plist_value(
				path: plist,
				key: 'CFBundleShortVersionString'
			)
			UI.message "The included AirServiceKit.framework version is #{version}".blue
			version
    }
  end

  def is_version_equal(current_version, new_version)
  	Gem::Version.new(new_version) == Gem::Version.new(current_version)
  end

  def is_version_greater(current_version, new_version)
  	Gem::Version.new(new_version) > Gem::Version.new(current_version)
  end

end